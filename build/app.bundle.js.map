{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/main.js","webpack:///./src/elevatorLib.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_elevatorLib","console","log","_elevatorLib2","default","buildingArr","liftCapacity","myBuilding","Building","fromRawData","myElevator","Elevator","floorIndex","floors","length","currentFloor","persons","personIndex","person","Call","getDirection","move","stoppedAt","Error","Floor","_classCallCheck","this","index","splice","rawFloorData","rawPersonData","Person","push","destinationFloor","currentFloorIndex","rawBuildingData","floor","direction","capacity","building","calls","_this","decideOnDirection","moveByOneFloor","filter","shouldElevatorStop","peopleExitElevator","peopleEnterElevator","goToBasementIfNoCalls","_this2","numberOfUpCalls","numberOfDownCalls","elevatorFloorIndex","elevatorDirection","_this3","peopleStaying","currentPerson","removePerson","personCall","callFound"],"mappings":"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","file":"app.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import calculateStops from './elevatorLib.js';\r\n\r\nconsole.log(calculateStops([[],[3],[4],[],[5,6,2,6],[],[]], 4));\r\n","class Floor {\r\n    constructor(persons) {\r\n        this.persons = persons;\r\n    }\r\n    static fromRawData(rawFloorData) {\r\n        let persons = [];\r\n        for (let personIndex = 0; personIndex < rawFloorData.length; personIndex++) {\r\n            let rawPersonData = rawFloorData[personIndex];\r\n            let person = Person.fromRawData(rawPersonData);\r\n            persons.push(person);\r\n        }\r\n        return new Floor(persons);\r\n    }\r\n    removePerson(index) {\r\n        this.persons.splice(index,1);\r\n    }\r\n}\r\n\r\nclass Person {\r\n    constructor(destinationFloor) {\r\n        this.destinationFloor = destinationFloor;\r\n    }\r\n    static fromRawData(rawPersonData) {\r\n        return new Person(rawPersonData);\r\n    }\r\n    getDirection(currentFloorIndex) {\r\n        if(currentFloorIndex < this.destinationFloor) {\r\n            return \"up\";\r\n        } else {\r\n            return \"down\";\r\n        }\r\n    }\r\n}\r\n\r\nclass Building {\r\n    constructor(floors) {\r\n        this.floors = floors;\r\n    }\r\n\r\n    static fromRawData(rawBuildingData) {\r\n        let floors = [];\r\n        for (let floorIndex = 0; floorIndex < rawBuildingData.length; floorIndex++) {\r\n            let rawFloorData = rawBuildingData[floorIndex];\r\n            let floor = Floor.fromRawData(rawFloorData);\r\n            floors.push(floor);\r\n        }\r\n        return new Building(floors);\r\n    }\r\n}\r\n\r\nclass Call {\r\n    constructor(floor, direction) {\r\n        this.floor = floor;\r\n        this.direction = direction;\r\n    }\r\n}\r\n\r\nclass Elevator {\r\n    constructor(capacity, building) {\r\n        this.direction = \"not-moving\";\r\n        this.currentFloorIndex = 0;\r\n        this.stoppedAt = [this.currentFloorIndex];\r\n        this.persons = [];\r\n        this.capacity = capacity;\r\n        this.calls = [];\r\n        this.building = building;\r\n    }\r\n\r\n    move() {\r\n        while (this.calls.length > 0) {\r\n            this.decideOnDirection();\r\n\r\n            this.moveByOneFloor();\r\n\r\n            // should elevator stop?\r\n            if(this.calls.filter(call => this.shouldElevatorStop(call, this.currentFloorIndex, this.direction)).length > 0) {\r\n                this.stoppedAt.push(this.currentFloorIndex);\r\n                this.calls = this.calls.filter(call => !this.shouldElevatorStop(call, this.currentFloorIndex, this.direction));\r\n                this.peopleExitElevator();\r\n                this.peopleEnterElevator();\r\n            }\r\n\r\n            this.goToBasementIfNoCalls();\r\n        }\r\n    }\r\n\r\n    decideOnDirection() {\r\n        let numberOfUpCalls = this.calls.filter((call => call.floor > this.currentFloorIndex)).length;\r\n        let numberOfDownCalls = this.calls.filter((call => call.floor < this.currentFloorIndex)).length;\r\n        if(this.direction === \"not-moving\") {\r\n            if(numberOfUpCalls >= numberOfDownCalls) {\r\n                this.direction = \"up\";\r\n            } else {\r\n                this.direction = \"down\";\r\n            }\r\n        } else if(this.direction === \"up\" &&  numberOfUpCalls === 0) {\r\n            this.direction = \"down\";\r\n        } else if(this.direction === \"down\" &&  numberOfDownCalls === 0) {\r\n            this.direction = \"up\";\r\n        }\r\n    }\r\n\r\n    moveByOneFloor() {\r\n        if(this.direction === \"up\") {\r\n            this.currentFloorIndex++;\r\n        } else if(this.direction === \"down\") {\r\n            this.currentFloorIndex--;\r\n        }\r\n    }\r\n\r\n    shouldElevatorStop(call, elevatorFloorIndex, elevatorDirection) {\r\n        return call.floor === elevatorFloorIndex && \r\n                            (call.direction === elevatorDirection || call.direction === \"not-important\");\r\n    }\r\n\r\n    peopleExitElevator() {\r\n        let peopleStaying = this.persons.filter(person => person.destinationFloor !== this.currentFloorIndex)\r\n        this.persons = peopleStaying;\r\n    }\r\n\r\n    peopleEnterElevator() {\r\n        let currentFloor = this.building.floors[this.currentFloorIndex];\r\n        let personIndex = 0;\r\n        while(this.persons.length < this.capacity && currentFloor.persons.length > personIndex) {\r\n            let currentPerson = currentFloor.persons[personIndex];\r\n            if (currentPerson.getDirection(this.currentFloorIndex) === this.direction) {\r\n                this.persons.push(currentFloor.persons[personIndex]);\r\n                this.call(new Call(currentPerson.destinationFloor, \"not-important\"));\r\n                currentFloor.removePerson(personIndex);\r\n            } else {\r\n                personIndex++;\r\n            }\r\n        }\r\n        if(currentFloor.persons.length > 0) {\r\n            for( let personIndex = 0; personIndex < currentFloor.persons.length; personIndex++ ) {\r\n                let person = currentFloor.persons[personIndex];\r\n                this.call(new Call(this.currentFloorIndex, person.getDirection(this.currentFloorIndex)));    \r\n            }\r\n        }\r\n    }\r\n\r\n    goToBasementIfNoCalls() {\r\n        if (this.calls.length == 0 && this.currentFloorIndex != 0) {\r\n            this.call(new Call(0, \"down\"));\r\n        }\r\n    }\r\n\r\n    call(personCall) {\r\n        let callFound = false;\r\n        for(let i = 0; i < this.calls.length; i++) {\r\n            if (personCall.floor == this.calls[i].floor && personCall.direction == this.calls[i].direction) {\r\n                callFound = true;\r\n            }\r\n            if (personCall.floor == this.calls[i].floor && personCall.direction === \"not-important\") {\r\n                this.calls[i] = personCall;\r\n                callFound = true;\r\n            }\r\n        }\r\n        if (!callFound) {\r\n            this.calls.push(personCall);\r\n        }\r\n    }\r\n}\r\n\r\nexport default function calculateStops(buildingArr, liftCapacity) {\r\n    if (liftCapacity > 0) {\r\n        let myBuilding = Building.fromRawData(buildingArr);\r\n    \r\n        let myElevator = new Elevator(liftCapacity, myBuilding);\r\n        for(let floorIndex = 0; floorIndex < myBuilding.floors.length; floorIndex++) {\r\n            let currentFloor = myBuilding.floors[floorIndex];\r\n            if(currentFloor.persons.length > 0) {\r\n                for( let personIndex = 0; personIndex < currentFloor.persons.length; personIndex++ ) {\r\n                    let person = currentFloor.persons[personIndex];\r\n                    myElevator.call(new Call(floorIndex, person.getDirection(floorIndex)));\r\n                }\r\n            }\r\n        }\r\n        myElevator.move();\r\n    \r\n        return myElevator.stoppedAt;\r\n    } else {\r\n        throw new Error(\"Capacity have to be positive number\");\r\n    }\r\n}\r\n"],"sourceRoot":""}